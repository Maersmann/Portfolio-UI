<Window x:Class="UI.Desktop.Depot.ErhalteneDividendeEintragenView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UI.Desktop.Depot"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Behaviors="clr-namespace:Base.Logic.Core.Behavior;assembly=Base.Logic"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d" ShowInTaskbar="False"
         Unloaded="Window_Unloaded"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}" 
        DataContext="{Binding ErhalteneDividendeEintragen ,Source={StaticResource Locator}}" Width="auto" Height="auto" SizeToContent="WidthAndHeight">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding CleanUpCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="340px"/>
            <ColumnDefinition Width="180px"/>
            <ColumnDefinition Width="180px"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="25px" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="45px" />
            <RowDefinition >
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="5" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RequestIsWorking}" Value="false">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
        </Grid.RowDefinitions>


        <materialDesign:Card Grid.Row="0" Grid.ColumnSpan="3" Background="{Binding Mode=OneWay, Source={StaticResource brushHeader}}"   >
            <Label HorizontalAlignment="Center" Width="auto" Content="{Binding Title}" />
        </materialDesign:Card>

        <Grid Grid.Row="1" Grid.Column="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50px"/>
                <RowDefinition Height="40px" />
                <RowDefinition Height="40px" />
                <RowDefinition Height="40px" />
                <RowDefinition Height="40px" />
                <RowDefinition Height="40px" />
            </Grid.RowDefinitions>


            <Grid Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="4" Background="{Binding Mode=OneWay, Source={StaticResource brushStammdatenBereich}}"/>

            <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Ex-Datum</Label>
            <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Zahltag</Label>
            <Label Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Betrag</Label>

            <Label Grid.Row="4" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Wechselkurs</Label>

            <DatePicker Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Width="100" SelectedDate="{Binding Exdatum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <materialDesign:HintAssist.Hint>01.01.2021</materialDesign:HintAssist.Hint>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <ItemsControl ItemsSource="{Binding}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ErrorContent}" Foreground="Red" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate> 
            </DatePicker>

            <DatePicker  Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Width="100"  SelectedDate="{Binding Zahldatum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" >
                <materialDesign:HintAssist.Hint>01.01.2021</materialDesign:HintAssist.Hint>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <ItemsControl ItemsSource="{Binding}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ErrorContent}" Foreground="Red" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </DatePicker>

            <Grid Grid.Row="2" Grid.Column="1"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBox HorizontalAlignment="Center" Grid.Column="0" TextWrapping="NoWrap" VerticalAlignment="Center" Width="90" Text="{Binding Betrag, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, TargetNullValue='', StringFormat=N4,ConverterCulture='de-DE' }" Cursor="IBeam" >
                    <materialDesign:HintAssist.Hint>0</materialDesign:HintAssist.Hint>
                    <i:Interaction.Behaviors>
                        <Behaviors:TextBoxInputBehavior InputMode="DecimalInput"/>
                    </i:Interaction.Behaviors>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="textBox"/>
                                <ItemsControl ItemsSource="{Binding}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ErrorContent}" Foreground="Red" TextWrapping="Wrap" FontSize="10" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>

                <ComboBox Grid.Column="1" HorizontalAlignment="Center"  VerticalAlignment="Center"  Width="40" ItemsSource="{Binding Waehrungen}" SelectedItem="{Binding Waehrung}"  Margin="0,0,10,0" />
            </Grid>

            <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition >
                        <RowDefinition.Style>
                            <Style TargetType="{x:Type RowDefinition}">
                                <Setter Property="Height" Value="40px" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WechsellkursHasValue}" Value="false">
                                        <Setter Property="Height" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Rundung Dividende</Label>
                <ComboBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"  Width="100" ItemsSource="{Binding RundungTypes}" SelectedItem="{Binding RundungArtDividende}" />
            </Grid>

            <TextBox Grid.Row="4"  Grid.Column="1" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" Text="{Binding Wechselkurs, UpdateSourceTrigger=PropertyChanged,  TargetNullValue='' }" Cursor="IBeam"  >
                <materialDesign:HintAssist.Hint>0</materialDesign:HintAssist.Hint>
                <i:Interaction.Behaviors>
                    <Behaviors:TextBoxInputBehavior InputMode="DecimalInput"/>
                </i:Interaction.Behaviors>
            </TextBox>

            <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition >
                        <RowDefinition.Style>
                            <Style TargetType="{x:Type RowDefinition}">
                                <Setter Property="Height" Value="40px" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WechsellkursHasValue}" Value="false">
                                        <Setter Property="Height" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Rundung Erhalten</Label>
                <ComboBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"  Width="100" ItemsSource="{Binding RundungTypes}" SelectedItem="{Binding RundungArtErhalten}" />


            </Grid>

        </Grid>



        <materialDesign:Card Grid.Row="2" Grid.ColumnSpan="3"  >
            <DockPanel  LastChildFill="False" >
                <Button DockPanel.Dock="Right" Margin="5" HorizontalAlignment="Center" Width="100"  Command="{Binding SaveCommand, Mode=OneWay}"  Style="{DynamicResource MaterialDesignFlatDarkBgButton}" >Speichern</Button>
                <Button DockPanel.Dock="Right" Margin="5" HorizontalAlignment="Center" Width="100"  Command="{Binding ValidiereCommand, Mode=OneWay}"  Style="{DynamicResource MaterialDesignFlatDarkBgButton}" Cursor="Hand" >Validieren</Button>
                <Button DockPanel.Dock="Left" Margin="5" HorizontalAlignment="Center" Width="100"  Command="{Binding OpenSteuernCommand, Mode=OneWay}"  Style="{DynamicResource MaterialDesignFlatDarkBgButton}" Cursor="Hand" >Steuern</Button>
            </DockPanel>
        </materialDesign:Card>

        <Grid Grid.Column="1" Grid.Row="1"  Height="300" Background="{Binding Mode=OneWay, Source={StaticResource brushUebersicht}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
            </Grid.RowDefinitions>
            <Label Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Bemessungsgrundlage</Label>
            <Label Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" >Steuern</Label>

            <Label Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center" >Zwischensumme</Label>
            <Label Grid.Row="6" HorizontalAlignment="Center" VerticalAlignment="Center" >Steuern</Label>
            <Label Grid.Row="8" HorizontalAlignment="Center" VerticalAlignment="Center" >Erhalten</Label>

            <TextBox Grid.Row="1" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.Bemessungsgrundlage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N2,ConverterCulture='de-DE' }" TextAlignment="Center" Cursor="Arrow"  />
            <TextBox Grid.Row="3" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.SteuerVorZwischensumme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N2,ConverterCulture='de-DE' }"  TextAlignment="Center" Cursor="IBeam" />

            <TextBox Grid.Row="5" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.Zwischensumme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }" TextAlignment="Center"  />
            <TextBox Grid.Row="7" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.SteuerNachZwischensumme, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2},ConverterCulture='de-DE' }" TextAlignment="Center"  />
            <TextBox Grid.Row="9" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.Erhalten, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2},ConverterCulture='de-DE' }" TextAlignment="Center"  />
        </Grid>
        <Grid Grid.Column="2" Grid.Row="1" Height="auto" Background="{Binding Mode=OneWay, Source={StaticResource brushUebersicht}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
                <RowDefinition Height="30px" />
                <RowDefinition Height="25px" />
            </Grid.RowDefinitions>

            <Label Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" >Bestand</Label>
            <Label Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" >Betrag gerundet</Label>

            <TextBox Grid.Row="1" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.Bestand, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,ConverterCulture='de-DE' }" TextAlignment="Center"  />
            <TextBox Grid.Row="3" HorizontalAlignment="Center" TextWrapping="NoWrap"  VerticalAlignment="Center" Width="100" IsReadOnly="true" IsEnabled="False" Text="{Binding Werte.BetragGerundet, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,ConverterCulture='de-DE', StringFormat={}{0:N2}  }" TextAlignment="Center" Cursor="Arrow"  />
        </Grid>

        <ProgressBar Grid.Row="3" Grid.ColumnSpan="3" Minimum="0" Maximum="100"  Height="5" IsIndeterminate="True" />
    </Grid>
</Window>
